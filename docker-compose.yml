# Docker Compose para API Clínica Veterinaria
# Optimizado para producción

services:
  # Base de datos MongoDB
  mongodb:
    image: mongo:6.0
    container_name: clinica_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: clinica_veterinaria
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - clinica_network

  # API REST
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: clinica_api
    restart: unless-stopped
    env_file:
      - env.docker
    environment:
      # Variables críticas que sobrescriben env.docker
      - NODE_ENV=production
      - PORT=3000
      - DB=mongodb://admin:password123@mongodb:27017/clinica_veterinaria?authSource=admin
    ports:
      - "3001:3000"
    depends_on:
      mongodb:
        condition: service_started
    networks:
      - clinica_network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: clinica_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - clinica_network

volumes:
  mongodb_data:
    driver: local

networks:
  clinica_network:
    driver: bridge 